---
- block:
  - name: Create build directory
    file:
      state: directory
      path: "{{ checkout_path }}"
    tags: setup

  - name: git checkout
    git:
      repo: "{{ git_source_repository_path }}"
      dest: "{{ checkout_path }}"
      version: "{{ branch }}"
      accept_hostkey: true
      force: yes
    tags: checkout
    when: git_source_repository_path is defined

  - name: Get commit author
    shell: git --no-pager show -s --format='%an <%ae>' HEAD
    args:
      chdir: "{{ checkout_path }}"
    register: git_author
    tags: prepare_commit

  - include: "{{ hook_build_tasks | default(role_path ~ '/hooks/empty.yml') }}"

  - name: Clean push_path
    file:
      state: absent
      path: "{{ push_path }}"
    tags: prepare_commit

  - name: Copy to push directory
    command: "rsync -a {{ checkout_path }}/ {{ push_path }} --exclude {{ push_path }}"

  - name: Find all gitignores
    shell: "find 2>/dev/null | egrep /\\.gitignore$"
    args:
      chdir: "{{ push_path }}"
    register: gitignore_to_check
    ignore_errors: yes
    tags: prepare_commit

  - name: Remove markers in gitignore "#### BEGIN REMOVE ANDOCK-CI ..."
    blockinfile:
      path: "{{ push_path }}/{{ item }}"
      marker: "#### {mark} REMOVE ANDOCK-CI ###"
      content: ""
    with_items: "{{ gitignore_to_check.stdout_lines }}"
    tags: prepare_commit

  - name: Git add remote repository "{{ git_target_repository_path }}"
    command: git remote add remote "{{ git_target_repository_path }}" warn=no
    args:
      warn: false
      chdir: "{{ push_path }}"
    tags: prepare_commit

  - name: Remove all git folders without the root .git directory
    shell: "ls | xargs find 2>/dev/null | egrep /\\.git$ | xargs rm -rf"
    args:
      chdir: "{{ push_path }}"
    tags: prepare_commit

  - name: Add files
    command: git add .
    args:
      chdir: "{{ push_path }}"
    tags: prepare_commit

  - name: Commit files
    command: "git commit -am \"Build: {{ ansible_date_time.iso8601 }}\" --author=\"{{ git_author.stdout }}\""
    args:
      chdir: "{{ push_path }}"
    tags: commit

  - name: BAAAM! Push it
    command: "git push --force remote {{ branch }}:{{ branch }}-build"
    args:
      chdir: "{{ push_path }}"
    tags: push

